{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact-persons-list/contact-persons-list.component.ts","./src/app/contact-persons-list/contact-persons-list.component.html","./src/app/contact-persons/contact-persons.component.ts","./src/app/contact-persons/contact-persons.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/material.module.ts","./src/app/process-details/process-details.component.ts","./src/app/process-details/process-details.component.html","./src/app/services/message.service.ts","./src/app/shared/pipes/phone.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ensclient';\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {AppRoutingModule} from '@app/app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppComponent} from '@app/app.component';\nimport {HomeComponent} from '@app/home/home.component';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HomeModule} from '@app/home/home.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CommonModule,\n    HttpClientModule,\n    HomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {IContactPerson} from '@app/model/data/contact-person.model';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatTable, MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-contact-persons-list',\n  templateUrl: './contact-persons-list.component.html',\n  styleUrls: ['./contact-persons-list.component.scss']\n})\nexport class ContactPersonsListComponent implements OnInit {\n  @Input() persons: IContactPerson[];\n  tableFormGrp: FormGroup;\n\n  @ViewChild(MatTable) cpTable!: MatTable<any>;\n\n  displayedColumns: string[] = ['name', 'address', 'phoneNumber', 'addButton'];\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private _tableFb: FormBuilder, private _rowFb: FormBuilder) {}\n\n  ngOnInit() {\n    this.tableFormGrp = this._tableFb.group({\n       rowsFormControl: this._tableFb.array([])\n    });\n\n    this.tableFormGrp = this._rowFb.group({\n       rowsArr: this._rowFb.array(this.persons.map(\n          (person: IContactPerson) => this._rowFb.group({\n            name: new FormControl(person.name),\n            phoneNumber: new FormControl(person.phoneNumber),\n            address: new FormControl(person.address),\n            editable: new FormControl(false),\n          })\n      ))\n    });\n\n    this.dataSource =\n      new MatTableDataSource(this.rowsArr.controls);\n  }\n\n  get rowsArr(): FormArray {\n    return this.tableFormGrp.get('rowsArr') as FormArray;\n  }\n\n  renderTable() {\n    this.cpTable.renderRows();\n  }\n\n  addContactPerson() {\n    //this.rowsArr.push(this.initEmptyRowForm());\n    this.rowsArr.insert(0, this.initEmptyRowForm());\n    this.renderTable();\n  }\n\n  initEmptyRowForm(): FormGroup {\n    return this._rowFb.group({\n      name: new FormControl(''),\n      phoneNumber: new FormControl(''),\n      address: new FormControl(''),\n      editable: new FormControl(true),\n    });\n  }\n\n  editable(index: number): boolean {\n    const editable = this.rowsArr.value[index].editable;\n    return editable;\n  }\n\n  fieldAppearance(index: number): string {\n    const appearance = this.editable(index) ? 'fill' : 'none';\n    return appearance;\n  }\n\n  setRowEditable(index: number, editable: boolean) {\n    this.rowsArr.value[index].editable = editable;\n    // this.rowsArr.at(0).get('editable').patchValue(true);\n  }\n\n}\n","<div class=\"container-area contact-persons-list-container\">\n  <div class=\"title\">אנשי קשר</div>\n  <div class=\"contact-persons-table\">\n    <form [formGroup]=\"tableFormGrp\">\n      <ng-container formArrayName=\"rowsArr\">\n        <table #cpTable mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> שם איש קשר</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field  [ngClass]=\"editable(i) ? 'name-column-edit' : 'name-column'\"\n                   appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"name\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef> כתובת</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field class=\"address-column\" appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"address\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef> טלפון נייד</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field class=\"phone-number-column\" appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"phoneNumber\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"addButton\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <button *ngIf=\"editable(i)\" (click)=\"setRowEditable(i, false)\" class=\"btn btn-primary mr-5\"> + </button>\n              <!--<mat-form-field class=\"add-btn\" appearance=\"none\">\n                <button (click)=\"setRowEditable(i, false)\" formControlName=\"editable\"\n                        class=\"btn btn-primary mr-5\"> + </button>\n              </mat-form-field>-->\n          </ng-container>\n\n          <tr mat-header-row class=\"grey-bg\" *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n        </table>\n        <button (click)=\"addContactPerson()\" class=\"btn btn-primary mr-5\">הוסף איש קשר</button>\n\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IContactPerson} from '@app/model/data/contact-person.model';\n\n@Component({\n  selector: 'app-contact-persons',\n  templateUrl: './contact-persons.component.html',\n  styleUrls: ['./contact-persons.component.scss']\n})\nexport class ContactPersonsComponent implements OnInit {\n  @Input() persons: IContactPerson[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-area contact-persons-container\">\n  <div class=\"title\">ריכוז אנשי קשר</div>\n\n  <section class=\"details\">\n    <div class=\"column\">\n      <span>מספר אנשי קשר בתהליך: </span>\n      <span>{{persons?.length}}</span>\n      <span class=\"action-label\"> פעולות אפשריות: </span>\n\n      <span class=\"button action-btn\">הוספת מבוטח</span>\n      <span class=\"button action-btn\">איפוס מלא</span>\n      <span class=\"button action-btn\">איפוס אנשי קשר</span>\n    </div>\n  </section>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from '@app/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IProcess} from '@app/model/data/process.model';\nimport {MessageService} from '@app/services/message.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  processObs$: Observable<IProcess>;\n\n  constructor(private _httpClient: HttpClient, private _messageSrv: MessageService) {\n  }\n\n  ngOnInit(): void {\n    this.processObs$ = this._httpClient.get<IProcess>('assets/mocks/ens-process.json');\n  }\n\n  refreshProcess() {\n    this._messageSrv.refreshProcess(true);\n  }\n\n}\n","<div *ngIf=\"(this.processObs$ | async) as process\">\n\n  <div class=\"super-claim-details grey-bg\">\n\n    <span class=\"column\">\n      <span>תביעת על: </span>\n      <span>{{process?.superClaim?.superClaimNumber}}</span>\n    </span>\n\n    <span class=\"column\">\n      <span>מצב תביעה: </span>\n      <span>{{process?.superClaim?.superClaimStatus?.value}}</span>\n    </span>\n\n    <div class=\"button\" (click)=\"refreshProcess()\">רענון תהליך</div>\n  </div>\n\n  <app-process-details [process]=\"process\"></app-process-details>\n  <app-contact-persons [persons]=\"process.contactPersons\"></app-contact-persons>\n  <app-contact-persons-list [persons]=\"process.contactPersons\"></app-contact-persons-list>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HomeRoutingModule} from '@app/home/home-routing.module';\nimport {AngularMaterialModule} from '@app/material.module';\nimport {ProcessDetailsComponent} from '@app/process-details/process-details.component';\nimport {ContactPersonsComponent} from '@app/contact-persons/contact-persons.component';\nimport {ContactPersonsListComponent} from '@app/contact-persons-list/contact-persons-list.component';\nimport {SharedModule} from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProcessDetailsComponent,\n    ContactPersonsComponent,\n    ContactPersonsListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HomeRoutingModule,\n    AngularMaterialModule,\n    SharedModule\n  ],\n  exports:[\n    ProcessDetailsComponent,\n    ContactPersonsComponent,\n    ContactPersonsListComponent,\n  ]\n})\nexport class HomeModule { }\n","import {NgModule} from '@angular/core';\r\nimport {MAT_DATE_LOCALE, MatNativeDateModule} from '@angular/material/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [\r\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill', floatLabelControl: 'auto'}},\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class AngularMaterialModule {\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IProcess} from '@app/model/data/process.model';\nimport {IProcessDetails} from '@app/model/domain/process-details.model';\nimport {MessageService} from '@app/services/message.service';\n\n@Component({\n  selector: 'app-process-details',\n  templateUrl: './process-details.component.html',\n  styleUrls: ['./process-details.component.scss']\n})\nexport class ProcessDetailsComponent implements OnInit, OnDestroy {\n  @Input() process: IProcess;\n  processDetailsObs$: Observable<IProcessDetails>;\n  claimDetailsFormGrp: FormGroup;\n\n  constructor(private _fb: FormBuilder, private _httpClient: HttpClient, private _messageSrv: MessageService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.populateDetails();\n\n    this._messageSrv.getRefreshMsgObs().subscribe((msg: boolean) => {\n      if (msg) {\n        this.claimDetailsFormGrp.reset();\n        this.claimCauseControl.disable();\n      }\n    })\n  }\n\n  createForm() {\n    this.claimDetailsFormGrp = this._fb.group({\n      superClaimControl: [null],\n      claimDateControl: [null],\n      claimCauseControl: [{value: null, disabled: true}],\n    });\n  }\n\n  populateDetails() {\n    this.processDetailsObs$ = this._httpClient.get<IProcessDetails>('assets/mocks/process-details.json');\n  }\n\n  get claimCauseControl(): FormControl {\n    return this.claimDetailsFormGrp.controls.claimCauseControl as FormControl;\n  }\n\n  onSuperClaimChange() {\n    this.claimCauseControl.enable();\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<div class=\"container-area process-details-container\">\n  <div class=\"title\">ריכוז מידע בתהליך</div>\n  <div class=\"details\">\n    <div class=\"column\">\n      <span>פרטי מבוטח: </span>\n      <span class=\"insured-name\">{{process?.insured?.firstName}}  {{process?.insured?.lastName}}</span>\n      <span class=\"insured-age\">{{process?.insured?.age}}</span>\n      <span class=\"insured-id\">{{process?.insured?.identity}}</span>\n      <span class=\"insured-address\">{{process?.insured?.address?.streetName}}, {{process?.insured?.address?.cityName}}</span>\n    </div>\n\n    <div class=\"column row-gap bold\">\n      <span class=\"insured-name-label\">שם</span>\n      <span class=\"insured-id-label\">ת.ז.</span>\n      <span class=\"insured-age-label\">גיל</span>\n      <span class=\"insured-address-label\">כתובת</span>\n    </div>\n\n  </div>\n\n  <div *ngIf=\"(processDetailsObs$ | async) as processDetails\">\n    <form [formGroup]=\"claimDetailsFormGrp\" class=\"grey-bg\">\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>סוג תביעת על: </label>\n            <select name=\"superClaimDdList\" formControlName=\"superClaimControl\" (change)='onSuperClaimChange()'>\n              <option *ngFor=\"let superClaim of processDetails.superClaimDdList\"\n                      [value]=\"superClaim.val\">{{superClaim.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column claim-datepicker\">\n            <label>תאריך אירוע: </label>\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <input name=\"claimDate\" [matDatepicker]=\"picker\" formControlName=\"claimDateControl\" placeholder=\"הזן תאריך\">\n            <mat-datepicker #picker></mat-datepicker>\n          </div>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>סיבת אירוע: </label>\n            <select name=\"claimCauseDdList\" formControlName=\"claimCauseControl\">\n              <option *ngFor=\"let claimCause of processDetails.claimCauseDdList\"\n                      [value]=\"claimCause.val\">{{claimCause.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>מהות אירוע: </label>\n            <select name=\"injuryTypeDdList\" formControlName=\"injuryTypeControl\">\n              <option *ngFor=\"let injuryType of processDetails.injuryTypeDdList\"\n                      [value]=\"injuryType.val\">{{injuryType.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>תביעה הוגשה באמצעות: </label>\n            <select name=\"submittedByDdList\" formControlName=\"submittedByControl\">\n              <option *ngFor=\"let submittedBy of processDetails.submittedByDdList\"\n                      [value]=\"submittedBy.val\">{{submittedBy.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>אופן קבלת התביעה: </label>\n            <select name=\"submissionMethodDdList\" formControlName=\"submissionMethodControl\">\n              <option *ngFor=\"let submissionMethod of processDetails.submissionMethodDdList\"\n                      [value]=\"submissionMethod.val\">{{submissionMethod.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  private refreshMsgSubject = new BehaviorSubject<boolean>(false);\n  refreshMsgObs$: Observable<boolean> = this.refreshMsgSubject.asObservable();\n\n  constructor() { }\n\n  refreshProcess(refresh: boolean = false) {\n    this.refreshMsgSubject.next(refresh);\n  }\n\n  getRefreshMsgObs(): Observable<boolean> {\n    return this.refreshMsgObs$;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(phoneNum: number): unknown {\n    const phoneStr = '0' + phoneNum.toString();\n    const phoneStrFmt = phoneStr.slice(0, 3) + '-' + phoneStr.slice(3);\n    return phoneStrFmt;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {PhonePipe} from '@app/shared/pipes/phone.pipe';\n\n@NgModule({\n  declarations: [PhonePipe],\n  imports: [\n    CommonModule,\n  ],\n  exports:[PhonePipe]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}