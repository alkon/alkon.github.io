{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact-persons-list/contact-persons-list.component.ts","webpack:///src/app/contact-persons-list/contact-persons-list.component.html","webpack:///src/app/contact-persons/contact-persons.component.ts","webpack:///src/app/contact-persons/contact-persons.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/process-details/process-details.component.ts","webpack:///src/app/process-details/process-details.component.html","webpack:///src/app/services/message.service.ts","webpack:///src/app/shared/pipes/phone.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContactPersonsListComponent","_tableFb","_rowFb","displayedColumns","dataSource","tableFormGrp","group","rowsFormControl","array","rowsArr","persons","map","person","name","phoneNumber","address","editable","controls","get","cpTable","renderRows","insert","initEmptyRowForm","renderTable","index","value","appearance","addContactPerson","ContactPersonsComponent","path","component","HomeRoutingModule","forChild","HomeComponent","_httpClient","_messageSrv","processObs$","refreshProcess","HomeModule","AngularMaterialModule","provide","useValue","floatLabelControl","ProcessDetailsComponent","_fb","createForm","populateDetails","getRefreshMsgObs","subscribe","msg","claimDetailsFormGrp","reset","claimCauseControl","disable","superClaimControl","claimDateControl","disabled","processDetailsObs$","enable","MessageService","refreshMsgSubject","refreshMsgObs$","asObservable","refresh","next","providedIn","PhonePipe","phoneNum","phoneStr","toString","phoneStrFmt","slice","SharedModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ensclient';\n}\n","<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {AppRoutingModule} from '@app/app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppComponent} from '@app/app.component';\nimport {HomeComponent} from '@app/home/home.component';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HomeModule} from '@app/home/home.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CommonModule,\n    HttpClientModule,\n    HomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {IContactPerson} from '@app/model/data/contact-person.model';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatTable, MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-contact-persons-list',\n  templateUrl: './contact-persons-list.component.html',\n  styleUrls: ['./contact-persons-list.component.scss']\n})\nexport class ContactPersonsListComponent implements OnInit {\n  @Input() persons: IContactPerson[];\n  tableFormGrp: FormGroup;\n\n  @ViewChild(MatTable) cpTable!: MatTable<any>;\n\n  displayedColumns: string[] = ['name', 'address', 'phoneNumber', 'addButton'];\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private _tableFb: FormBuilder, private _rowFb: FormBuilder) {}\n\n  ngOnInit() {\n    this.tableFormGrp = this._tableFb.group({\n       rowsFormControl: this._tableFb.array([])\n    });\n\n    this.tableFormGrp = this._rowFb.group({\n       rowsArr: this._rowFb.array(this.persons.map(\n          (person: IContactPerson) => this._rowFb.group({\n            name: new FormControl(person.name),\n            phoneNumber: new FormControl(person.phoneNumber),\n            address: new FormControl(person.address),\n            editable: new FormControl(false),\n          })\n      ))\n    });\n\n    this.dataSource =\n      new MatTableDataSource(this.rowsArr.controls);\n  }\n\n  get rowsArr(): FormArray {\n    return this.tableFormGrp.get('rowsArr') as FormArray;\n  }\n\n  renderTable() {\n    this.cpTable.renderRows();\n  }\n\n  addContactPerson() {\n    //this.rowsArr.push(this.initEmptyRowForm());\n    this.rowsArr.insert(0, this.initEmptyRowForm());\n    this.renderTable();\n  }\n\n  initEmptyRowForm(): FormGroup {\n    return this._rowFb.group({\n      name: new FormControl(''),\n      phoneNumber: new FormControl(''),\n      address: new FormControl(''),\n      editable: new FormControl(true),\n    });\n  }\n\n  editable(index: number): boolean {\n    const editable = this.rowsArr.value[index].editable;\n    return editable;\n  }\n\n  fieldAppearance(index: number): string {\n    const appearance = this.editable(index) ? 'fill' : 'none';\n    return appearance;\n  }\n\n  setRowEditable(index: number, editable: boolean) {\n    this.rowsArr.value[index].editable = editable;\n    // this.rowsArr.at(0).get('editable').patchValue(true);\n  }\n\n}\n","<div class=\"container-area contact-persons-list-container\">\n  <div class=\"title\">אנשי קשר</div>\n  <div class=\"contact-persons-table\">\n    <form [formGroup]=\"tableFormGrp\">\n      <ng-container formArrayName=\"rowsArr\">\n        <table #cpTable mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> שם איש קשר</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field  [ngClass]=\"editable(i) ? 'name-column-edit' : 'name-column'\"\n                   appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"name\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef> כתובת</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field class=\"address-column\" appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"address\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef> טלפון נייד</th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <mat-form-field class=\"phone-number-column\" appearance=\"{{fieldAppearance(i)}}\">\n                <input matInput type=\"text\" formControlName=\"phoneNumber\" [readonly]=\"true\">\n              </mat-form-field>\n          </ng-container>\n\n          <ng-container matColumnDef=\"addButton\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroup]=\"element\">\n              <button *ngIf=\"editable(i)\" (click)=\"setRowEditable(i, false)\" class=\"btn btn-primary mr-5\"> + </button>\n              <!--<mat-form-field class=\"add-btn\" appearance=\"none\">\n                <button (click)=\"setRowEditable(i, false)\" formControlName=\"editable\"\n                        class=\"btn btn-primary mr-5\"> + </button>\n              </mat-form-field>-->\n          </ng-container>\n\n          <tr mat-header-row class=\"grey-bg\" *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n        </table>\n        <button (click)=\"addContactPerson()\" class=\"btn btn-primary mr-5\">הוסף איש קשר</button>\n\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IContactPerson} from '@app/model/data/contact-person.model';\n\n@Component({\n  selector: 'app-contact-persons',\n  templateUrl: './contact-persons.component.html',\n  styleUrls: ['./contact-persons.component.scss']\n})\nexport class ContactPersonsComponent implements OnInit {\n  @Input() persons: IContactPerson[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-area contact-persons-container\">\n  <div class=\"title\">ריכוז אנשי קשר</div>\n\n  <section class=\"details\">\n    <div class=\"column\">\n      <span>מספר אנשי קשר בתהליך: </span>\n      <span>{{persons?.length}}</span>\n      <span class=\"action-label\"> פעולות אפשריות: </span>\n\n      <span class=\"button action-btn\">הוספת מבוטח</span>\n      <span class=\"button action-btn\">איפוס מלא</span>\n      <span class=\"button action-btn\">איפוס אנשי קשר</span>\n    </div>\n  </section>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from '@app/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IProcess} from '@app/model/data/process.model';\nimport {MessageService} from '@app/services/message.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  processObs$: Observable<IProcess>;\n\n  constructor(private _httpClient: HttpClient, private _messageSrv: MessageService) {\n  }\n\n  ngOnInit(): void {\n    this.processObs$ = this._httpClient.get<IProcess>('assets/mocks/ens-process.json');\n  }\n\n  refreshProcess() {\n    this._messageSrv.refreshProcess(true);\n  }\n\n}\n","<div *ngIf=\"(this.processObs$ | async) as process\">\n\n  <div class=\"super-claim-details grey-bg\">\n\n    <span class=\"column\">\n      <span>תביעת על: </span>\n      <span>{{process?.superClaim?.superClaimNumber}}</span>\n    </span>\n\n    <span class=\"column\">\n      <span>מצב תביעה: </span>\n      <span>{{process?.superClaim?.superClaimStatus?.value}}</span>\n    </span>\n\n    <div class=\"button\" (click)=\"refreshProcess()\">רענון תהליך</div>\n  </div>\n\n  <app-process-details [process]=\"process\"></app-process-details>\n  <app-contact-persons [persons]=\"process.contactPersons\"></app-contact-persons>\n  <app-contact-persons-list [persons]=\"process.contactPersons\"></app-contact-persons-list>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HomeRoutingModule} from '@app/home/home-routing.module';\nimport {AngularMaterialModule} from '@app/material.module';\nimport {ProcessDetailsComponent} from '@app/process-details/process-details.component';\nimport {ContactPersonsComponent} from '@app/contact-persons/contact-persons.component';\nimport {ContactPersonsListComponent} from '@app/contact-persons-list/contact-persons-list.component';\nimport {SharedModule} from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProcessDetailsComponent,\n    ContactPersonsComponent,\n    ContactPersonsListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HomeRoutingModule,\n    AngularMaterialModule,\n    SharedModule\n  ],\n  exports:[\n    ProcessDetailsComponent,\n    ContactPersonsComponent,\n    ContactPersonsListComponent,\n  ]\n})\nexport class HomeModule { }\n","import {NgModule} from '@angular/core';\r\nimport {MAT_DATE_LOCALE, MatNativeDateModule} from '@angular/material/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [\r\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill', floatLabelControl: 'auto'}},\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }\r\n  ],\r\n})\r\nexport class AngularMaterialModule {\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IProcess} from '@app/model/data/process.model';\nimport {IProcessDetails} from '@app/model/domain/process-details.model';\nimport {MessageService} from '@app/services/message.service';\n\n@Component({\n  selector: 'app-process-details',\n  templateUrl: './process-details.component.html',\n  styleUrls: ['./process-details.component.scss']\n})\nexport class ProcessDetailsComponent implements OnInit, OnDestroy {\n  @Input() process: IProcess;\n  processDetailsObs$: Observable<IProcessDetails>;\n  claimDetailsFormGrp: FormGroup;\n\n  constructor(private _fb: FormBuilder, private _httpClient: HttpClient, private _messageSrv: MessageService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.populateDetails();\n\n    this._messageSrv.getRefreshMsgObs().subscribe((msg: boolean) => {\n      if (msg) {\n        this.claimDetailsFormGrp.reset();\n        this.claimCauseControl.disable();\n      }\n    })\n  }\n\n  createForm() {\n    this.claimDetailsFormGrp = this._fb.group({\n      superClaimControl: [null],\n      claimDateControl: [null],\n      claimCauseControl: [{value: null, disabled: true}],\n    });\n  }\n\n  populateDetails() {\n    this.processDetailsObs$ = this._httpClient.get<IProcessDetails>('assets/mocks/process-details.json');\n  }\n\n  get claimCauseControl(): FormControl {\n    return this.claimDetailsFormGrp.controls.claimCauseControl as FormControl;\n  }\n\n  onSuperClaimChange() {\n    this.claimCauseControl.enable();\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<div class=\"container-area process-details-container\">\n  <div class=\"title\">ריכוז מידע בתהליך</div>\n  <div class=\"details\">\n    <div class=\"column\">\n      <span>פרטי מבוטח: </span>\n      <span class=\"insured-name\">{{process?.insured?.firstName}}  {{process?.insured?.lastName}}</span>\n      <span class=\"insured-age\">{{process?.insured?.age}}</span>\n      <span class=\"insured-id\">{{process?.insured?.identity}}</span>\n      <span class=\"insured-address\">{{process?.insured?.address?.streetName}}, {{process?.insured?.address?.cityName}}</span>\n    </div>\n\n    <div class=\"column row-gap bold\">\n      <span class=\"insured-name-label\">שם</span>\n      <span class=\"insured-id-label\">ת.ז.</span>\n      <span class=\"insured-age-label\">גיל</span>\n      <span class=\"insured-address-label\">כתובת</span>\n    </div>\n\n  </div>\n\n  <div *ngIf=\"(processDetailsObs$ | async) as processDetails\">\n    <form [formGroup]=\"claimDetailsFormGrp\" class=\"grey-bg\">\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>סוג תביעת על: </label>\n            <select name=\"superClaimDdList\" formControlName=\"superClaimControl\" (change)='onSuperClaimChange()'>\n              <option *ngFor=\"let superClaim of processDetails.superClaimDdList\"\n                      [value]=\"superClaim.val\">{{superClaim.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column claim-datepicker\">\n            <label>תאריך אירוע: </label>\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <input name=\"claimDate\" [matDatepicker]=\"picker\" formControlName=\"claimDateControl\" placeholder=\"הזן תאריך\">\n            <mat-datepicker #picker></mat-datepicker>\n          </div>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>סיבת אירוע: </label>\n            <select name=\"claimCauseDdList\" formControlName=\"claimCauseControl\">\n              <option *ngFor=\"let claimCause of processDetails.claimCauseDdList\"\n                      [value]=\"claimCause.val\">{{claimCause.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>מהות אירוע: </label>\n            <select name=\"injuryTypeDdList\" formControlName=\"injuryTypeControl\">\n              <option *ngFor=\"let injuryType of processDetails.injuryTypeDdList\"\n                      [value]=\"injuryType.val\">{{injuryType.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row-edit\">\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>תביעה הוגשה באמצעות: </label>\n            <select name=\"submittedByDdList\" formControlName=\"submittedByControl\">\n              <option *ngFor=\"let submittedBy of processDetails.submittedByDdList\"\n                      [value]=\"submittedBy.val\">{{submittedBy.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n\n        <mat-form-field class=\"details-edit\">\n          <div class=\"column\">\n            <label>אופן קבלת התביעה: </label>\n            <select name=\"submissionMethodDdList\" formControlName=\"submissionMethodControl\">\n              <option *ngFor=\"let submissionMethod of processDetails.submissionMethodDdList\"\n                      [value]=\"submissionMethod.val\">{{submissionMethod.desc}}\n              </option>\n            </select>\n          </div>\n        </mat-form-field>\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  private refreshMsgSubject = new BehaviorSubject<boolean>(false);\n  refreshMsgObs$: Observable<boolean> = this.refreshMsgSubject.asObservable();\n\n  constructor() { }\n\n  refreshProcess(refresh: boolean = false) {\n    this.refreshMsgSubject.next(refresh);\n  }\n\n  getRefreshMsgObs(): Observable<boolean> {\n    return this.refreshMsgObs$;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(phoneNum: number): unknown {\n    const phoneStr = '0' + phoneNum.toString();\n    const phoneStrFmt = phoneStr.slice(0, 3) + '-' + phoneStr.slice(3);\n    return phoneStrFmt;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {PhonePipe} from '@app/shared/pipes/phone.pipe';\n\n@NgModule({\n  declarations: [PhonePipe],\n  imports: [\n    CommonModule,\n  ],\n  exports:[PhonePipe]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}